\documentclass{article}

\title{Rcdm Package Demo}
\author{Michel Philipp\\University of Zurich}
\date{\today}

\begin{document}

\maketitle

\tableofcontents

\setlength\parindent{0pt}

\newpage

\section{Installation}

To install the package from the source code, Rcpp and RcppArmadillo are 
required. If you have not installed Rcpp and RcppArmadillo packages, run:

<<eval=FALSE>>=
install.packages(c("Rcpp", "RcppArmadillo"))
@

Then, install the package either by the command:
<<eval=FALSE>>=
install.packages("path/filename.tar.gz", repos = NULL, type = "source")
@
or if you are using RStudio go to "Packages - Install - Install from" and 
choose "Package Archive File" then Browse the File and klick Install. 
Alternatively your can install Rcdm directly from GitHub:
<<eval=FALSE>>=
install.packages("devtools") # if you have not installed devools
devtools::install_github("mphili/cdm")
@

Rcdm currently depends on Rcpp, Matrix, limSolve and gtools packages, that need 
to be installed on your system.
<<eval=FALSE>>=
install.packages(c("Rcpp", "Matrix", "limSolve", "gtools"))
@

\section{Fitting a GDINA model}
<<message=FALSE>>=
library("Rcdm")
@

Load your own data or use our data example from the pks package:
<<>>=
# install.packages("pks")
data("probability", package = "pks")

# reduce to 12 items from the first test
items <- sprintf("b1%.2i", 1:12)
resp <- probability[, items]
resp <- resp[complete.cases(resp),]

qmat <- t(read.table(header = FALSE, text = "
  0    1    0    0    1    1    0    0    0    1    1    0
  0    0    0    1    0    0    0    0    1    1    1    1
  1    0    0    0    1    1    1    1    1    0    1    1
  0    0    1    0    0    0    1    1    0    0    0    1
"))

colnames(qmat) <- c("cp", "id", "pb", "un")
rownames(qmat) <- colnames(resp)
@

Fit a GDINA model using the Rcdm package:
<<>>=
mGDINA <- gdina(resp, qmat)
@

Plot the estimated conditional response probabilities:
<<fig.height=8>>=
plot(mGDINA)
@

\section{Analyzing the Result}

\subsection{Parameter Estimates}

Extract the estimates of the item parameters:
<<>>=
mGDINA$dj
@

Extract the estimates of the latent class distribution
<<>>=
mGDINA$pa
@

Extract the estimates of the response probabilities:
<<>>=
mGDINA$pj
@

Get a nice table that contains the estimates of the item parameters:
<<>>=
coef(mGDINA)
@

\subsection{Standard Errors}

Compute the (correct) variance covariance matrix of all model parameters:

<<>>=
v0 <- vcov(mGDINA)
@

Compute the (incorrect) variance covariance matrix by ignoring the
skill parameters:
<<>>=
v1 <- vcov(mGDINA, type = "partial")
@

Compute the (incorrect) variance covariance matrix by item-wise computation
of the information matrix:
<<>>=
v2 <- vcov(mGDINA, type = "itemwise")
@

\subsubsection{Standard errors for the item parameters}

<<>>=
cbind("full (correct)"       = sqrt(diag(v0))[seq(1, 2*nrow(qmat))],
      "partial (incorrect)"  = sqrt(diag(v1)),
      "itemwise (incorrect)" = sqrt(diag(v2)))
@

\subsubsection{Standard errors for the latent class parameters}

<<>>=
sqrt(diag(v1))[-seq(1, 2*nrow(qmat))]
@

\subsection{Confidence intervals}

Confidence intervals for the intem parameters using the correct computation
of the standard errors:
<<>>=
confint(mGDINA, alpha = 0.05)
@

\subsection{Item-level fit}

Item-level comparison of saturated and reduced models (de la Torre, 2013):
<<>>=
gdina_wald(mGDINA)
@

\subsection{Fit indices}

<<>>=
logLik(mGDINA)
BIC(mGDINA)
AIC(mGDINA)
@

\section{Fitting Reduced Models}

Fit the reduced DINA model
<<>>=
mDINA <- gdina(resp, qmat, rule = "DINA")
@

Fit the reduced DINO model
<<>>=
mDINO <- gdina(resp, qmat, rule = "DINO")
@

Fit the reduced ACDM
<<>>=
mACDM <- gdina(resp, qmat, rule = "ACDM")
@

\subsection{Model comparisons}

Compare (non-nested) models
<<>>=
AIC(mDINA, mDINO, mACDM, mGDINA)
BIC(mDINA, mDINO, mACDM, mGDINA)
@

Compare (nested) models
<<>>=
anova(mDINA, mACDM, mGDINA)
anova(mDINO, mACDM, mGDINA)
@

\end{document}